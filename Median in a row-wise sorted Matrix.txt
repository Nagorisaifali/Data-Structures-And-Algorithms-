Median in a row-wise sorted Matrix

Given a row-wise sorted matrix mat[][] of size n*m, where the number of rows and columns is always odd. Return the median of the matrix.

Examples:

Input: mat[][] = [[1, 3, 5], 
                [2, 6, 9], 
                [3, 6, 9]]
Output: 5
Explanation: Sorting matrix elements gives us [1, 2, 3, 3, 5, 6, 6, 9, 9]. Hence, 5 is median.


Input: mat[][] = [[2, 4, 9],
                [3, 6, 7],
                [4, 7, 10]]
Output: 6
Explanation: Sorting matrix elements gives us [2, 3, 4, 4, 6, 7, 7, 9, 10]. Hence, 6 is median.


Input: mat = [[3], [4], [8]]
Output: 4
Explanation: Sorting matrix elements gives us [3, 4, 8]. Hence, 4 is median.


Constraints:
1 ≤ n, m ≤ 400
1 ≤ mat[i][j] ≤ 2000

Expected Complexities
Time Complexity: O(n log m * log(maxVal – minVal))
Auxiliary Space: O(1)


class Solution {
  public:
    int median(vector<vector<int>> &mat) {
        // code here
        vector<int>ans ; 
        for(int i=0;i<mat.size();i++){
            for(int j=0;j<mat[0].size();j++){
                ans.push_back(mat[i][j]) ; 
            }
        }
        sort(ans.begin(),ans.end()) ; 
        int start = 0 , end = ans.size()-1 ; 
        int mid = start + (end - start)/2 ; 
        return ans[mid] ; 
    }
};

