Remove Duplicates from Sorted List

Given the head of a sorted linked list, delete all duplicates such 
that each element appears only once. Return the linked list sorted as well.


Input: head = [1,1,2]
Output: [1,2]



Input: head = [1,1,2,3,3]
Output: [1,2,3]


Constraints:

The number of nodes in the list is in the range [0, 300].
-100 <= Node.val <= 100
The list is guaranteed to be sorted in ascending order.





ListNode* deleteDuplicates(ListNode* head) {
        if(head == NULL){
            return NULL ; 
        }ListNode * ptr = head ; 
        ListNode * temp = head->next ; 
        while(temp != NULL){
            if(temp->val != ptr->val){
                ptr = temp ; 
                temp = temp->next ; 
            }else{
                ptr->next = temp->next ; 
                delete(temp) ;
                temp = ptr->next ; 
            }
        }return head ; 
    }