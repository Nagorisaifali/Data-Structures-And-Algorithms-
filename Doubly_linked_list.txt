#include <stdio.h>
#include <stdlib.h>


typedef struct Node {
    int data;
    struct Node *left;
    struct Node *right; 
} Node;

Node *head = NULL;

void insert_first() {
    Node *temp = (Node *)malloc(sizeof(Node));
    temp->left = NULL ; 
    temp->right = NULL ; 
    printf("Enter the data: ");
    scanf("%d", &temp->data);
   	if(head == NULL){
   		head = temp ; 
		   return ; 	
	}temp->right = head ; 
	head->left = temp ; 
	head = temp ; 
}



void insert_last() {
   Node *temp = (Node *)malloc(sizeof(Node));
    temp->left = NULL ; 
    temp->right = NULL ; 
    printf("Enter the data: ");
    scanf("%d", &temp->data);

    if (head == NULL) {
        head = temp;
        return ; 
    }Node *ptr = head;
    while (ptr->right) {
        ptr = ptr->right;
    }
    ptr->right = temp;
    temp->left = ptr ; 
}



void delete_first(){
	if(head == NULL){
		printf("list is empty\n") ; 
		return ; 
	}
	printf("deleted ele is %d\n" , head->data) ; 
	head = head->right ; 
}


void delete_last() {
    if (head == NULL) {
        printf("List is empty\n");
        return;
    }
    
    if(head->right == NULL){
    	printf("Deleted element is %d\n", head->data);
    	head = NULL ; 
    }
    Node * ptr = head ; 
    Node * prev = NULL ; 
    while (ptr->right != NULL) {
	prev = ptr ; 
        ptr = ptr->right;
    }

    printf("Deleted element is %d\n", ptr->data);
    prev->right = NULL ; 
    
}



void display() {
    if (head == NULL) {
        printf("List is empty.\n");
        return;
    }
    Node *temp = head;
    while (temp) {
        printf("%d -> ", temp->data);
        temp = temp->right;
    }
    printf("NULL\n");
}

int main() {
    int ch;
    while (1) {
        printf("1. Insert_first\n");
        printf("2. Insert_last\n");
        printf("3. Delete_first\n");
        printf("4. Delete_last\n");
        printf("5. Display\n");
        printf("6. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &ch);

        switch (ch) {
            case 1:
                insert_first();
                break;
            case 2:
                insert_last();
                break;
            case 3:
                delete_first();
                break;
            case 4:
                delete_last();
                break;
            case 5:
                display();
                break;
            case 6:
                printf("Exiting...\n");
                return 0;
            default:
                printf("Invalid choice\n");
        }
    }
}