 Permutation in String

Given two strings s1 and s2, return true if s2 contains a 
permutation
 of s1, or false otherwise.

In other words, return true if one of s1's permutations is the substring of s2.


Example 1:

Input: s1 = "ab", s2 = "eidbaooo"
Output: true
Explanation: s2 contains one permutation of s1 ("ba").



Example 2:

Input: s1 = "ab", s2 = "eidboaoo"
Output: false


class Solution {
public:
    bool checkInclusion(string s1, string s2) {
        int n = s1.length() , m = s2.length() ; 
        sort(s1.begin() , s1.end()) ; 
        for(int i=0;i<m-n+1;i++){
            string temp = s2.substr(i,n) ; 
            sort(temp.begin() , temp.end()) ; 
            if(s1 == temp){
                return true ; 
            }
        }return false ; 
    }
};










