Palindrome Linked List


Given a singly linked list of integers. The task is to check if the given linked list is palindrome or not.


Input: LinkedList: 1->2->1->1->2->1
Output: true
Explanation: The given linked list is 1->2->1->1->2->1 , which is a palindrome and Hence, 
the output is true.



Input: LinkedList: 1->2->3->4
Output: false
Explanation: The given linked list is 1->2->3->4, which is not a palindrome and Hence,
 the output is false.


Expected Time Complexity: O(n)
Expected Auxiliary Space: O(1) 


class Solution {
  public:
    // Function to check whether the list is palindrome.
    bool isPalindrome(Node *head) {
       vector<int>ans ; 
       while(head != NULL){
           ans.push_back(head->data) ; 
           head = head->next ; 
       }int n = ans.size() ;
       int i=0 , j = n-1 ; 
       while(i<j){
           if(ans[i]!=ans[j]) return false ;
           i++ ; j-- ; 
       }return true ; 
    }
};







