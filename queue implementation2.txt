#include <stdio.h>
#include <stdlib.h>

typedef struct node {
    int data;
    struct node *next;
} node;

node *front = NULL;
node *rear = NULL;



void insertion() {
    node *temp;
    printf("Allocated memory into newnode \n");
    temp = (node *)malloc(sizeof(node));
    if (temp == NULL) {
        printf("Memory allocation failed\n");
        return;
    }
    printf("Enter node data \n");
    scanf("%d", &temp->data);
    temp->next = NULL;

    if (front == NULL) {
        front = rear = temp;
    }
	rear->next = temp;
	rear = temp;
}




void deletion() {
    if (front == NULL) {
        printf("Queue is empty\n");
        return;
    }

    node *temp = front;
    front = front->next;
    if (front == NULL) {
        rear = NULL;
    }
    printf("Deleted node data: %d\n", temp->data);
    free(temp);
}



void display() {
    if (front == NULL) {
        printf("Queue is empty\n");
        return;
    }

    node *temp = front;
    while (temp != NULL) {
        printf("%d -> ", temp->data);
        temp = temp->next;
    }
    printf("NULL\n");
}



void main () {
    int ch;
    while (1) {
        printf("1. Insert\n");
        printf("2. Delete\n");
        printf("3. Display\n");
        printf("4. Exit\n");
        printf("Enter your choice: \n");
        scanf("%d", &ch);

        switch (ch) {
            case 1:
                insertion();
                break;
            case 2:
                deletion();
                break;
            case 3:
                display();
                break;
            case 4:
                printf("Exiting...\n");
                return 0;
            default:
                printf("Invalid choice\n");
        }
    }
}