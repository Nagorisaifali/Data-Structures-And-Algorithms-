Right View of Binary Tree

Given a Binary Tree, find Right view of it. Right view of a Binary Tree is set of
nodes visible when tree is viewed from right side. Return the right view as a list. 

Right view of following tree is 1 3 7 8.


    	  1
       /     \
     2        3
   /   \      / \
  4     5   6    7
    \
     8


Input:
       1
    /    \
   3      2
Output: 1 2



Input:
     10
    /   \
  20     30
 /   \
40  60 
Output: 10 30 60


Expected Time Complexity: O(n).
Expected Auxiliary Space: O(Height of the Tree).


class Solution
{
    public:
    //Function to return list containing elements of right view of binary tree.
    vector<int> rightView(Node *root)
    {
       vector<int>ans ; 
       queue<Node *>q ; 
       q.push(root) ; 
       while(!q.empty()){
           int n = q.size() ; 
           for(int i=0;i<n;i++){
               Node * temp = q.front() ; 
               q.pop() ; 
               if(i==n-1){
                   ans.push_back(temp->data) ;
               }if(temp->left){
                   q.push(temp->left) ; 
               }if(temp->right){
                   q.push(temp->right) ; 
               }
           }
       }return ans ; 
    }
};

