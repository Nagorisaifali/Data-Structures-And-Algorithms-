Number of occurrence

Given a sorted array, arr[] and a number target, you need to find the number of occurrences of target in arr[]. 


Examples :

Input: arr[] = [1, 1, 2, 2, 2, 2, 3], target = 2
Output: 4
Explanation: target = 2 occurs 4 times in the given array so the output is 4.


Input: arr[] = [1, 1, 2, 2, 2, 2, 3], target = 4
Output: 0
Explanation: target = 4 is not present in the given array so the output is 0.


Input: arr[] = [8, 9, 10, 12, 12, 12], target = 12
Output: 3
Explanation: target = 12 occurs 3 times in the given array so the output is 3.




Constraints:
1 ≤ arr.size() ≤ 106
1 ≤ arr[i] ≤ 106
1 ≤ target ≤ 106




class Solution {
  public:
    int countFreq(vector<int>& arr, int target) {
        
        
        // using simple for loop
        // int cnt = 0 ; 
        // for(int i=0;i<arr.size();i++){
        //     if(arr[i] == target){
        //         cnt++ ;
        //     }
        // }return cnt ; 
        
        
        
        // using unordered_map 
        
        // unordered_map<int , int>mp ; 
        // for(auto x : arr){
        //     mp[x]++ ; 
        // }
        // return mp[target] ; 
        
        
        
        // using binary search 
        
        int low = 0 ,  high = arr.size()-1 ; 
        int freq = 0 ; 
        while(low <= high){
            int mid = low + (high - low)/2 ; 
            if(target == arr[mid]){
                for(int i=low;i<=high;i++){
                    if(arr[i] == target){
                        freq++ ;
                    }
                }break ; 
            }if(target > arr[mid]){
                low = mid + 1 ; 
            }else{
                high = mid - 1 ; 
            }
        }return freq ;
    }
};
