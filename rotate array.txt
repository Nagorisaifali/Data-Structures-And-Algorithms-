Rotate Array

Given an unsorted array arr[] of size n. Rotate the array to the left
(counter-clockwise direction) by d steps, where d is a positive integer. 

Note: Consider the array as circular.


Examples :

Input: n = 5, d = 2 arr[] = {1,2,3,4,5}
Output: 3 4 5 1 2
Explanation: 1 2 3 4 5  when rotated by 2 elements, it becomes 3 4 5 1 2.


Input: n = 10, d = 3 arr[] = {2,4,6,8,10,12,14,16,18,20}
Output: 8 10 12 14 16 18 20 2 4 6
Explanation: 2 4 6 8 10 12 14 16 18 20 when rotated by 3 elements, it becomes 8 10 12 14 16 18 20 2 4 6.






class Solution{
    public:
    
    //Function to rotate an array by d elements in counter-clockwise direction
    void reverse(int arr[] , int low , int high){
        while(low < high){
            swap(arr[low] , arr[high]) ; 
            low++ ; 
            high-- ; 
        }
    } 
    void rotateArr(int arr[], int d, int n){
        // code here
        d = d%n ; 
        reverse(arr , 0 , d-1);
        reverse(arr , d , n-1) ; 
        reverse(arr , 0 , n-1) ; 
  